name: 'Asuna Coverage.py Action'
author: 'HelloYeew'
description: 'Run coverage.py on your Python project and upload the results to Asuna.'
inputs:
  ASUNA_UPLOAD_KEY:
    description: "Asuna project's upload key"
    required: true
    default: ASUNA_UPLOAD_KEY

  ASUNA_ENDPOINT:
    description: "Asuna endpoint"
    required: false
    default: https://asuna.helloyeew.dev/api/coverage/upload

  COVERAGEPY_COMMAND:
    description: "Command to run coverage.py"
    required: true
    default: coverage run -m pytest

runs:
  using: 'composite'
  steps:
    - name: Install requirements
      shell: bash
      run: |
        pip install python-magic
        pip install coverage
        pip install requests

    - name: Install libmagic1
      shell: bash
      run: |
          sudo apt-get update
          sudo apt-get install libmagic1

    - name: Run coverage.py
      env:
        COVERAGEPY_COMMAND: ${{ inputs.COVERAGEPY_COMMAND }}
      shell: bash
      run: ${{ inputs.COVERAGEPY_COMMAND }}

    - name: Export coverage.py results
      shell: bash
      run: |
        coverage html
        coverage report --format markdown > coverage.md
        coverage json

    - name: Download upload script
      shell: bash
      run: |
          curl -L https://raw.githubusercontent.com/HelloYeew/asuna-coveragepy-action/main/asuna.py -o asuna.py

    - name: Upload coverage.py results to Asuna
      env:
          ASUNA_UPLOAD_KEY: ${{ inputs.ASUNA_UPLOAD_KEY }}
          ASUNA_ENDPOINT: ${{ inputs.ASUNA_ENDPOINT }}
          # Get event name that is this pull request or push
          EVENT_NAME: ${{ github.event_name }}
          PULL_REQUEST_NUMBER: ${{ github.event.number }}
          PULL_REQUEST_BRANCH: ${{ github.event.pull_request.head.ref }}
          PULL_REQUEST_HEAD: ${{ github.event.pull_request.head.sha }}
          PULL_REQUEST_TITLE: ${{ github.event.pull_request.title }}
          PUSH_BRANCH: ${{ github.ref }}
          PUSH_COMMIT: ${{ github.sha }}
      shell: bash
      run: |
        python asuna.py

    - name: Store coverage.md and asuna.md in environment file
      shell: bash
      run: |
        echo "ASUNA_MD<<EOF" >> $GITHUB_ENV
        echo $(cat asuna.md) >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV

    - name: Run coverage report --format and store result
      id: coverage
      env:
        ACTION_ALLOW_UNSECURE_COMMANDS: true
      shell: bash
      run: |
          coverage_report=$(coverage report --format markdown)
          coverage_report="${coverage_report//'%'/'%25'}"
          coverage_report="${coverage_report//$'\n'/'%0A'}"
          coverage_report="${coverage_report//$'\r'/'%0D'}"
          echo $coverage_report
          echo "::set-output name=coverage::$coverage_report"

    - name: Comment on pull request or update old comment
      if: ${{ github.event_name == 'pull_request' }}
      uses: peter-evans/create-or-update-comment@v2
      with:
        issue-number: ${{ github.event.number }}
        body: |
          ## üß™Ô∏èCoverage Report

          ${{ env.ASUNA_MD }}

          ${{ steps.coverage.outputs.coverage }}

          ---------------------------------------
          üó°Ô∏è Generate report by [Asuna](https://asuna.helloyeew.dev)
        reactions: rocket

branding:
  icon: 'check-square'
  color: 'red'